<h1> COMPFIE - API Document </h1>

[TOC]

# LOGIN

## Login

    [
        "Login",
        {
            "username": USERNAME,
            "password": String,
            "shirtname": String
        }
    ]

    On Success response will be of the form

    [
        "LoginSuccess",
        {
            "user_id": USER_ID,
            "client_id": CLIENT_ID,
            "le_id": Int,
            "session_token": SESSION_TOKEN,
            "email_id": EMAIL_ID,
            "user_group_name": USER_GROUP_NAME,
            "menu": Menu,
            "employee_name": String,
            "employee_code": EMPLOYEE_CODE,
            "contact_no": CONTACT_NUMBER,
            "address": ADDRESS,
            "designation": String
        }
    ]

    Possible Errors

    [
        "InvalidCredentials",
        {}
    ]

Note :
  * Above data will be used for displaying menu and user details in "User Profile" page

## Forgot Password

    [
        "ForgotPassword",
        {
            "username": USERNAME,
            "shortname": String
        }
    ]

    On Success

    [
        "ForgotPasswordSuccess",
        {}
    ]

    Possible Errors

    [
        "InvalidUsername",
        {}
    ]

Note :
    * On success Reset link should be sent to the user's email with unique token embeded in the url

## Reset Token Validation

    [
        "ResetTokenValidation",
        {
          "reset_token": RESET_TOKEN
        }
    ]

    On Success

    [
        "ResetTokenValidationSuccess",
        {}
    ]

    Possible Errors

    [
        "InvalidResetToken",
        {}
    ]

## Reset Password

    [
        "ResetPassword",
        {
          "reset_token": RESET_TOKEN,
          "new_password": String
        }
    ]

    On Success

    [
        "ResetPasswordSuccess",
        {}
    ]

    Possible Errors

    [
        "InvalidResetToken",
        {}
    ]

## Change Password

    [
        "ChangePassword",
        {
            "session_token": SESSION_TOKEN,
            "current_password": String,
            "new_password": String
        }
    ]

    On Success

    [
        "ChangePasswordSuccess",
        {}
    ]

    Possible Errors

    [
        "InvalidCurrentPassword",
        {}
    ]


# Request Format

    {
        "session_token": SESSION_TOKEN,
        "request": will be any of the following requests
    }

    Possible Errors

    [
        "InvalidSessionToken",
        {}
    ]

    Note : All the following Requests will be in the above format

## Masters

## Service Provider

### List

   [ "GetServiceProviders", {} ]

   Success Response

    [
        "GetServiceProvidersSuccess",
        {
            "service_providers": [
                {
                    "s_p_id": SERVICE_PROVIDER_ID,
                    "s_p_name": String,
                    "s_p_short": String,
                    "cont_from": Date,
                    "cont_to": Date,
                    "cont_person": String,
                    "cont_no": String,
                    "mob_no": String,
                    "e_id": String,
                    "address": ADDRESS,
                    "is_active": IS_ACTIVE,
                    "is_blocked": IS_ACTIVE,
                    "remarks": String,
                    "unblock_days": "30 days left"
                },
            ]

        }
    ]

#### Save Service Provider

    [
        "SaveServiceProvider",
        {
            "s_p_name": String,
            "s_p_short": String,
            "cont_from": Date,
            "cont_to": Date,
            "cont_person": String,
            "cont_no": String,
            "mob_no": String,
            "e_id": String,
            "address": ADDRESS,
        }
    ]

  On Success

    [
      "SaveServiceProviderSuccess",
      {}
    ]

  Possible Errors

    [
        "ServiceProviderNameAlreadyExists",
        {}
    ]

    [
        "ServiceProviderShortNameAlreadtExists",
        {}
    ]


#### Update Service Provider

    [
        "UpdateServiceProvider",
        {
            "s_p_id": SERVICE_PROVIDER_ID,
            "s_p_name": String,
            "s_p_short": String,
            "cont_from": Date,
            "cont_to": Date,
            "cont_person": String,
            "cont_no": String,
            "mob_no": String,
            "e_id": String,
            "address": ADDRESS,
        }
    ]

  On Success

    [
      "UpdateServiceProviderSuccess",
      {}
    ]

  Possible Errors

    [
        "InvalidServiceProviderId",
        {}
    ]

    [
      "ServiceProviderNameAlreadyExists",
        {}
    ]

    [
      "ServiceProviderShortNameAlreadtExists",
        {}
    ]

#### Change Service Provider Status

    [
        "ChangeServiceProviderStatus",
        {
            "s_p_id" : SERVICE_PROVIDER_ID,
            "is_active" : IS_ACTIVE
        }
    ]

    On Success

    [
        "ChangeServiceProviderStatusSuccess",
        {}
    ]


#### Block Service Provider

    [
        "BlockServiceProvider",
        {
            "s_p_id" : SERVICE_PROVIDER_ID,
            "is_block" : IS_ACTIVE
        }
    ]

    On Success

    [
        "ChangeServiceProviderStatusSuccess",
        {}
    ]



#### Get User Privileges

    [
        "GetUserPrivileges",
        {}
    ]

    On Success

    [
        "GetUserPrivilegesSuccess",
        {
            "forms": [
            {
              "category_id" : Int,
              "Menus": {
                "masters": [Form,],
                "transactions": [Form,],
                "reports": [Form,],
                "settings":[Form,]
              },
            },
          ],

          "form_categories": [
            {
              "f_cat": String,
              "f_cat_id": Int
            },
          ],

            "user_groups": [
            {
                "u_g_id": USER_GROUP_ID,
                "u_g_name": USER_GROUP_NAME,
                "f_cat_id": FOMR_CATEGORY_ID,
                "f_ids": [FORM_ID,]
                "is_active": IS_ACTIVE
            },
          ],
        }
    ]

#### Save User Privileges

    [
        "SaveUserPrivileges",
        {
            "u_g_name": USER_GROUP_NAME,
            "f_cat_id": FOMR_CATEGORY_ID,
            "f_type": FORM_TYPE,
            "f_ids": [FORM_ID, ]
        }
   ]

  On Success
    [
      "SaveUserPrivilegesSuccess",
      {}
    ]

  Possible Errors :

    [
        "UserGroupNameAlreadyExists",
        {}
    ]

#### Update User Privileges

    [
        "UpdateUserPrivileges",
        {
            "u_g_id": USER_GROUP_ID,
            "u_g_name": USER_GROUP_NAME,
            "f_type": FORM_TYPE,
            "f_ids": [FORM_ID, ]
        }
   ]

  On Success
    [
      "UpdateUserPrivilegesSuccess",
      {}
    ]

  Possible Errors :

    [
        "InvalidUserGroupId",
        {}
    ]

#### Change User Privilege Status

    [
        "ChangeUserPrivilegeStatus",
        {
            "u_g_id": USER_GROUP_ID,
            "is_active" : IS_ACTIVE
        }
    ]

  On Success

    [
        "ChangeUserPrivilegeStatusSuccess",
        {}
    ]

  Possible Errors

    [
      "InvalidUserGroupId",
      {}
    ]


### Get Usermanagement filters
    [
        "GetUserManagementFilters",
        {
            countries : [
                {
                    c_id: Int,
                    c_name: String,
                },
            ],
            businessgroups: [
                {
                    b_g_id: Int,
                    b_g_name: String
                },
            ],
            legalentities: [
                {
                    le_id: Int,
                    le_name: String
                },
            ],
            Divisions: [
                {
                    div_id: Int,
                    div_name: String
                }
            ],
            Catgories: [
                {
                    cat_id: Int,
                    cat_name: String
                }
            ],
            Domains: [
                {
                    d_id: Int,
                    d_name: String,
                    le_id: Int
                }
            ],
            Usercategories: [
                {
                    u_cat_id: Int,
                    u_cat_name: String
                },
            ]
        }
    ]


##  Get Legal Entity Unit List

    [
        "GetClientUnits",
        {
            le_id: Int,
            div_id: Optional value,
            cat_id: Optional value,
            d_id: Optiona value

        }
    ]

    On Success
    [
        'GetClientUnitsSuccess',
        {
            units: [
                {
                    "u_id": Int,
                    "u_name": String,
                    "u_code": String,
                    "address": String,
                    "d_ids": [Int, ],
                },
            ]
        }
    ]

####  Get Usermanagement List

    [
        "GetClientUsers",
        {
            c_id : Int,
            b_g_id: optional value,
            le_id: Int
        }
    ]

    On Success

    [
        "GetClientUsersSuccess",
        {
            "user_info": [
                {
                    "c_name": String,
                    "b_g_name": String,
                    "le_name": String,
                    "cont_from": Date,
                    "cont_to": Date,
                    "total_licences": Int,
                    "used_licences": Int,
                    "le_id": Int,
                    "users_list": [
                        {
                            "user_id": Int,
                            "u_cat_id": Int,
                            "u_g_id": Int,
                            "emp_name": String,
                            "emp_code": String,
                            "cont_no": String,
                            "mob_no": String,
                            "email_id": String,
                            "user_name": String,
                            "resend_mail": Boolean
                            "is_active": Boolean,
                            "is_disable": Boolean,
                            "reason": String,
                            "unblock": "30 days left"
                        }
                    ]
                },
            ]

        }
    ]

####  Save client user

    [
        "SaveClientUser",
        {
            "u_cat_id": Int,
            "u_g_id": Int,
            "email_id": String,
            "emp_name": String,
            "emp_code": String,
            "cont_no": String,
            "mob_no": String,
            "domain_ids": [
                {
                    "le_id": 1,
                    "d_id": 2
                },
            ],
            "unit_ids": [
                {
                    "le_id": 2,
                    "u_id": 3
                }
            ]
        }
    ]

    On Success

    [
        "SaveClientUserSuccess",
        {}
    ]

    Possible Errors :

    [
        "EmployeeCodeAlreadyExists",
        {}
    ]

    [
        "ContactNumberAlreadyExists",
        {}
    ]

####  Update client user

    [
        "UpdateClientUser",
        ClientUser
    ]

    On Success

    [
        "UpdateClientUserSuccess",
        {
            "user_id": Int,
            "le_id": Int,
            "u_cat_id": Int,
            "u_g_id": Int,
            "email_id": String,
            "emp_name": String,
            "emp_code": String,
            "cont_no": String,
            "mob_no": String,
            "domain_ids": [
                {
                    "le_id": 1,
                    "d_id": 2
                },
            ],
            "unit_ids": [
                {
                    "le_id": 2,
                    "u_id": 3
                }
            ]
        }
    ]

    Possible Errors :

    [
        "InvalidUserId",
        {}
    ]

#### Change Client User Status

    [
        "ChangeClientUserStatus",
        {
            "user_id"  : USER_ID,
            "le_id": Int,
            "is_active" : IS_ACTIVE,
        }
    ]

    On Success

    [
        "ChangeClientUserStatusSuccess",
        {}
    ]

#### Change Client User Disable Status

    [
        "ChangeClientUserDisableStatus",
        {
            "user_id"  : USER_ID,
            "le_id": Int,
            "id_disable" : IS_ACTIVE,
            "reason": String
        }
    ]

    On Success

    [
        "ChangeClientUserDisableStatusSuccess",
        {}
    ]



#### Unit closure List
    [
        "GetUnitList",
        {
            "le_id": Int
        }
    ]
    On Success
    [
        "GetUnitListSuccess",
        [
            {
                "u_id": Int,
                "u_name": String,
                "le_id": Int,
                "le_name": String,
                "div_name": String,
                "cat_name": String,
                "u_code": String,
                "u_name": Int,
                "is_active": Boolean,
                "is_closed": Boolean,
                "reason": String,
                "unblock": "days left"
            }
        ]
    ]

### Close Unit
    [
        "CloseUnit",
        {
            "le_id": Int,
            "unit_id": UNIT_ID,
            "password": String
        }
    ]

    On Success

    [
        "CloseUnitSuccess",
        {}
    ]

    Possible Errors

    [
        "InvalidPassword",
        {}
    ]

## Statutory Settings
### Statutory Settings Filters
    [
        "GetStatutoryFilters", {}
    ]

    ON SUCCESS
    [
        "GetStatutoryFiltersSuccess",
        {
            bgroups: [
                {
                    "bg_id": Int,
                    "bg_name": String,
                },
            ],

            lentities: [
                {
                    "le_id": Int,
                    "le_name": String,
                    "bg_id": Optional value
                },
            ],

            divisions: [
                {
                    "div_id": Int,
                    "div_name": String,
                    "le_id": Int,
                }
            ],

            categories: [
                {
                    "cat_id": Int,
                    "cat_name": String,
                    "div_id": optional value,
                    "le_id": Int,
                },
            ],

        }
    ]

### Statutory Unit Lists
    [
        "GetStatutoryUnits": {
            "le_id": Int,
        }
    ]

    on success
    [
        "GetStatutoryUnitsSuccess",
        {
            "units": [
                {
                    "le_id": Int,
                    "u_id": Int,
                    "unit_name": String,
                    "unit_code": String,
                    "address": String,
                    "domain_name": String,
                    "compliances_cnt": Int,
                    "u_by": String,
                    "u_on": String,
                    "is_locked": Boolean,
                    "allow_lock": Boolean
                }
            ]

        }
    ]

### Statutory Compliance List
    [
        "GetStatutoryCompliances", {
            "u_id": Int,
            "le_id": Int,
        }
    ]
    on success
    [
        "GetStatutoryCompliancesSuccess",
        {
            l_one_id: Int,
            l_one_name: String,
            l_applicable_status: Boolean,
            l_one_remakrs: String,
            comp_id: Int,
            comp_applicable_status: Boolean,
            comp_opted_status: Boolean,
            remarks: String,
            is_saved: Boolean,
            comp_name: String,
            doc_name: String,
            frequency: String,
            description: String,
            is_active: Boolean
        },
        .....
    ]

### Save Statutory Settings
    [
        "SaveStatutorySettings", {
            "submission_status": Int,
            "statu_lists": [
                {
                    "u_id": Int,
                    "le_id": Int,
                    "l_one_id": Int,
                    "comp_id": Int,
                    "comp_opted_status": Boolean,
                    "comp_remarks": String,
                    "l_one_opted_status": Boolean,
                },
            ]
        }
    ]

    On Success
    [
        "SaveStatutorySettingsSuccess",
        {}
    ]

### Lock Statutory Settins
    [
        "LockStatutorySettings",
        {
            "le_id": Int,
            "u_id": Int,
            "lock_status": Boolean
        }
    ]

    On Success
    [
        "LockStatutorySettingsSuccess",
        {}
    ]

## Review Settings
### Review Settings Filters
    [
        "GetReviewSettingsFilters",
        {}
    ]

    ON SUCCESS
    [
        "GetReviewSettingsFiltersSuccess",
        {
            review_type: [
                {
                    r_type_id: Int,
                    r_type: String
                },
            ],
            b_groups: [
                {
                    "bg_id": Int,
                    "bg_name": String,
                }
            ],
            legal_entities: [
                {
                    le_id: Int,
                    le_name: String,
                    bg_id: optional value
                }
            ],
            Domains: [
                {
                    le_id: Int,
                    d_id: Int,
                    d_name: String
                }
            ],
            Repeats_type: [
                {
                    repeat_type: String,
                    repeat_type_id: Int
                }
            ]
        }
    ]

### Review Settings Units
    [
        "GetReviewSettingsUnits",
        {
            "le_id": Int,
            "d_id": Int
        }
    ]

    On Success
    [
        "GetReviewSettingsUnitsSuccess",
        {
            "units": [
                {
                    "u_id": Int,
                    "u_name":String,
                    "u_code": String,
                    "address": String,
                    "le_id": Int
                }
            ]
        }
    ]

### Review Settings Compliances
    [
        "GetReviewSettingsCompliances",
        {
            "le_id": Int,
            "u_ids": [Int, ],
            "d_id": Int,
            "review_type": Int
        }
    ]
    on success
    [
        "GetReviewSettingsComplainces",
        {
            "compliance_list": [
                {
                    "comp_id": Int,
                    "comp_name": String,
                    "doc_name": String,
                    "comp_description": String,
                    "frequency": String,
                    "Repeat_type": String,
                    "Repeats_evey": Int,
                    "Actual_Statu_Dates": [
                        {
                            "Statutory_date": Int,
                            "Statutory_month": Int,
                            "trigger_before": Int,
                        }
                    ],
                    "Statu_Dates": [
                        {
                            "Statutory_date": Int,
                            "Statutory_month": Int,
                            "trigger_before": Int,
                        }
                    ],
                    "applicable_units": [Int, ]
                },
            ]
        }
    ]

### REview Settings Save
    [
        "SaveReviewSettings",
        {
            compliances_list : [
                {
                    "comp_id": Int,
                    "comp_name": String,
                    "doc_name": String,
                    "comp_description": String,
                    "frequency": String,
                    "Repeat_type": String,
                    "Repeats_evey": Int,
                    "Statu_Dates": [
                        {
                            "Statutory_date": Int,
                            "Statutory_month": Int,
                            "trigger_before": Int,
                        }
                    ],
                    "applicable_units": [Int, ]
                }
            ],
        }
    ]

## Assign Compliance

### GetAssignComplianceFilters
    [
        "GetAssignComplianceFilters",
        {}
    ]

    on success
    [
        "GetAssignComplianceFiltersSuccess",
        {
            legal_entities : [
                {
                    le_id: Int,
                    le_name: String
                }
            ],
            divisions: [
                {
                    div_id: Int,
                    div_name: String,
                    le_id: Int,
                }
            ],
            categories: [
                {
                    cat_id: Int,
                    cat_name: String,
                    div_id: optional value,
                    le_id: Int,
                }
            ],
            domains: [
                {
                    le_id: Int,
                    d_id: Int
                },
            ],
            frequencies: [
                {
                    f_id: Int,
                    f_name: String
                },
            ],
        }
    ]

### GetAssignComplianceUnits
    [
        "GetAssignComplianceUnits",
        {
            le_id: Int,
            div_id: optional value,
            cat_id: optional value,
            d_id: Int,
        }
    ]

    on success
    [
        "GetAssignCompliancesUnitsSuccess",
        {
            unit_list: [
                {
                    u_id: Int,
                    u_name: String,
                    le_id: Int,
                    div_id: optional value,
                    cat_id: optional value
                }
            ]
        }
    ]

### GetAssignComplianceList
    [
        "GetAssignComplianceList",
        {
            le_id: Int,
            u_id: Int,
            d_id: Int
        }
    ]

    On success
    [
        "GetAssignComplianceListSuccess",
        {
            compliances: [
                {
                    l_one_id: Int,
                    l_one_name: String,
                    comp_id: Int,
                    comp_name: String,
                    doc_name: String,
                    comp_description: String,
                    applicable_units: [Int, ],
                    frequency: String,
                    f_id: Int,
                    statu_dates_summary: String,
                    statu_dates: [
                        {
                            statutory_month: Int,
                            statutory_date: Int,
                            trigger_before: Int
                        }
                    ],
                    due_dates: [String, ],
                    validity_date: String
                },
            ]

        }

    ]

### SaveAssignCompliance
    [
        "SaveAssignCompliance",
        {}
    ]

    on success

    [
        "SaveAssignComplianceSuccess",
        {
            comp_list: [
                {
                    comp_id: Int,
                    due_dates: [Int, ],
                    trigger_befores: [Int, ],
                    validity_date: String,
                    u_ids: [Int, ]
                },
            ]
        }
    ]

    possible failure
    [
        "InvalidDueDate",
        comp_names: [String, ]
    ]


## Reassign Compliance
### ReassignComplianceFilters
    [
        "GetReassignComplianceFilters", {}
    ]

    on success
    [
        "GetReassignComplianceFiltersSuccess": {
            "users_list": [
                {
                    "user_id": Int,
                    "user_name": String "empcode - empname",
                }
            ],
            "user_type":  [
                {
                    "user_type": String,
                    "user_type_id": Int
                }
            ]
        }
    ]

### ReassignComplainceUnits
    [
        "GetReassignComplianceUnits",
        {
            user_id: Int,
        }
    ]

    On success
    [
        "GetReassignComplianceUnitsSuccess",
        {
            "unit_lists": [
                {
                    u_id: Int,
                    u_name: String
                },
            ]
        }
    ]

### ReassignUnitList
    [
        "GetReasignComplianceList",
        {
            user_id: Int,
            unit_id: optional,
            user_type: Int
        }
    ]

    on success
    [
        "GetReassignComplianceListSuccess",
        {
            unit_lists: [
                {
                    unit_id: Int,
                    unit_name: String,
                    compliance_count: Int,
                    user_type: Int

                },
            ]
        }
    ]

### ReassignUnitWiseCompliance
    [
        "GetReassignUnitWiseCompliance",
        {
            u_id: Int,
            user_type: Int
        }
    ]

    on success
    [
        "GetReassignUnitWiseComplianceSuccess",
        {
            comp_lists: [
                {
                    comp_id: Int,
                    comp_name: String,
                    doc_name: String,
                    frequency: String,
                    statu_dates_summary: String,
                    trigger_before: Int,
                    assignee: String,
                    concur: String,
                    approver: String,
                    due_date: String,
                    compliance_type: Int,
                    u_id: Int,
                    comp_history_id: optional value
                },
            ]
        }
    ]

### SaveReassignCompliance
    [
        "SaveReassignCompliance",
        {
            reassign_user: Int,
            reassign_type: Int,
            comp_lists: [
                {
                    comp_id: Int,
                    due_date: String,
                },
            ]

        }
    ]

    on success

    [
        "SaveReassignComplianceSuccess",
        {}
    ]

    possible failure
    [
        "InvalidDueDate",
        comp_names: [String, ]
    ]


### ComplianceApprovalsFilters
    [
        "GetComplianceApprovalsFilters",
        {
        }
    ]

    on success
    [
        "GetComplianceApprovalsFiltersSuccess",
        {
            "legal_entites": [
                {
                    le_id: Int,
                    le_name: String
                }
            ],
            "units": [
                {
                    u_id: Int,
                    unit_name: String,
                    le_id: Int
                },
            ]
        }
    ]

### ComplianceApprovalsList
    [
        "GetComplianceApprovalsLst",
        {
            le_id: Int,
            u_id: optional value,
            r_count: Int
        }
    ]

    on success
    [
        "GetComplainceApprovalsListSuccess",
        {
            comp_lists: [
                {
                    unit_id: Int,
                    unit_name: String,
                    assignee: String,
                    assignee_id: Int,
                    comp_id: Int,
                    Comp_name: String,
                    comp_frequency: String,
                    docs_list : [
                        {
                            doc_name: String,
                            "doc_url": String
                        }
                    ],
                    domain_name: String,
                    d_id: Int,
                    start_date: String,
                    due_date: String,
                    difference: String,
                    uploaded_date: String,
                    completion_date: String,
                    status: String,
                    remarks: String,
                    concurrence: String,

                },
            ]
        }
    ]

### SaveComplianceApprovals
    [
        "SaveComplianceApprovals",
        {
            le_id: Int,
            u_id: Int,
            action: Int,
            Remarks: String
        }
    ]

    on success
    [
        "SaveComplianceApprovalsSuccess",
        {}
    ]


## CompletedTaskCurrentYEar
### CompletedTaskCurrentYear
    [
        "GetCompletedTaskCurrentYearFilters",
        {

        }
    ]

    on success
    [
        "GetCompletedTaskCurrentYearFiltersSuccess",
        {
            legal_entities: [
                {
                    le_id: Int,
                    le_name: String,
                },
            ],
            divisions: [
                {
                    div_id: Int,
                    div_name: String,
                    le_id: Int
                }
            ],
            categories: [
                {
                    cat_id: Int,
                    cat_name: String,
                    div_id: optional value,
                    le_id: Int
                }
            ],
            domains: [
                {
                    d_id: Int,
                    d_name: String,
                    le_id: Int
                }
            ],
            frequency: [
                {
                    f_id: Int,
                    f_name: String
                },
            ],
            Assignees: [
                {
                    user_id: Int,
                    emp_name: String,
                    emp_code: String
                }
            ]

        }
    ]

### GetClientUnits
### GetActs
    [
        "GetActs",
        {
            "d_id": Int
        }
    ]

    on success

    [
        "GetActsSuccess",
        {
            "statu_name": String,
            "statu_id": Int
        }
    ]

### GetCompliancesForCurrentYear
    [
        "GetCompliancesForCurrentYear",
        {
            le_id: Int,
            unit_id: Int,
            d_id: Int,
            l_one_id: Int,
            f_id: Int
        }
    ]
    on success
    [
        "GetComplianceForCurrentYearSuccess",
        {
            comp_lists: [
                {
                    comp_id: Int,
                    comp_name: String,
                    doc_name: String,
                    frequency: String,
                    statu_dates_summary: String,
                    due_date, String,
                    assignee: Int,
                },
            ]
        }

    ]

### SaveCurrentYearCompliances

    [
        "SaveCurrentYearCompliances",
        {
            comp_lists: [
                {
                    comp_id: Int,
                    due_date: String,
                    completion_date: String,
                    doc_info: file-string,
                    assignee: Int,
                    comp_status: Int,
                    u_id: Int
                },
            ]
        }
    ]

    on success
    [
        "SaveCurrentYearComplianceSuccess",
        {}
    ]

### ComplianceTaskDetails
### GetCalendarView
    [
        "GetCalendarView",
        {
            le_id: Int,
            u_id: optional value

        }
    ]

    on success
    [
        "GetCalendarViewSuccess",
        {
            "Oct-2016": [
                {
                    1: {
                        due_date: optional value compliance count,
                        inprogress: optional value,
                        over_due: optional value,
                        upcoming: optional value
                    },
                    2: {
                        .........
                    }
                },
            ],
            "Nov-2016": [
                {
                    ...........
                }
            ]
        }
    ]

### GetCalendarCompliances
    [
        "GetCalendarCompliances",
        {
            le_id: Int,
            u_id: optional value,
            date: string,
            compliance_type:  # 1: due_date, 2: inprogress, 3: over_due, 4: upcoming,
            rcount: Int
        }
    ]

    on success
    [
        "GetCurrentCompliancesSuccess",
        {
            total_compliances: Int,
            compliance_type: Int,
            comp_lists: [
                {
                    comp_id: Int,
                    comp_history_id: Int,
                    doc_name: String,
                    comp_task: String,
                    d_name: String,
                    d_id: Int,
                    start_date: String,
                    due_date: String,
                    days: String,
                    status: String,
                    f_f_url: String,

                    u_id: Int,
                    u_name: String,
                    comp_frequency: String,
                    doc_lists: [
                        {
                            "doc_name:" String,
                            "doc_url": String
                        },
                    ],
                    completion_date: String,
                    approved_status: Int,
                    approved_remarks: Srting,
                },
            ]

        }
    ]


    [
        "GetUpcomingCompliancesSuccess",
        {
            total_compliances: Int,
            compliance_type: Int,
            comp_lists: [
                {
                    comp_id: Int,
                    doc_name: String,
                    comp_task: String,
                    d_name: String,
                    d_id: Int,
                    start_date: String,
                    due_date: String,
                    f_f_url: String,

                    u_id: Int,
                    u_name: String,
                    comp_frequency: String,
                },
            ]

        }
    ]

### SaveCurrentComplianceTask
    [
        "SaveCurrentcomplianceTask",
        {
            le_id: Int,
            u_id: Int,
            comp_history_id: Int,
            doc_list: [
                {
                    .....
                }
            ],
            completion_date: String,
            remarks: String,
        }
    ]
    on success
    [
        "SaveCurrentComplianceTaskSuccess",
        {}
    ]

### GetOnoccurrenceComplianceList
    [
        "GetOnOccurrenceComplianceList",
        {
            le_id: Int,
            u_id: optional value
        }
    ]
    on success
    [
        "GetOnOccurrenceComplianceListSuccess",
        {
            comp_list: [
                {
                    comp_id: Int,
                    comp_name,: String
                    s_provition: String,
                    comp_descrip: String,
                    statu_date_summary: String,
                    unit_name: String,
                    occurrence_history: [
                        {
                            start_date: String,
                            assignee: String,
                            completed_on: String,
                            concurr: String,
                            concurred_on: String,
                            approver: String,
                            approved_on: String,
                            status: String
                        }
                    ]
                },
                {.....}
            ]

        }
    ]

### StartOnOcurrenceCompliance
    [
        "StartOnOccurrenceCompliance",
        {
            comp_id: Int,
            start_date: String,
            remarks: String
        }
    ]

    on success
    [
        "StartOnOccurrenceComplianceSuccess",
        {}
    ]

-------------------------------------------------------
## Widget List
### GetWidgetList
    [
        "GetWidgetLists",
        {}

    ]

    on success
    [
        "GetWidgetListsSuccess",
        {
            component_list: [
                {
                    component_name: String,
                    component_id: Int,
                    is_added: Boolean,
                    component_order: Int,
                    is_resized: boolean,
                    pined_size: {
                        height: Int, width: Int
                    },
                }
            ]
        }
    ]


### Component table
    {
        1: compliance_status_chart,
        2: escalation,
        3: not_complied,
        4: trend_chart,
        5: rik_chart,
        6: user_score_card,
        7: domain_score_card,
        8: calendar_view
    }

### GetWidgetContent
    [
        "GetWidgetContent",
        {
            component_id: Int
        }
    ]
    on success
    [
        "Get"
        {

        }
    ]
