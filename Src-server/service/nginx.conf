
worker_processes 1;

error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
}


http {
    # Enumerate all the Tornado servers here
    upstream knowledge {
        server 127.0.0.1:8082;
        server 127.0.0.1:8083;
    }

    upstream webfront {
        server 127.0.0.1:8084;
        server 127.0.0.1:8085;
    }

    upstream client {
        server 127.0.0.1:8086;
    }

    default_type application/octet-stream;

    access_log /var/log/nginx/access.log;

    client_body_timeout 100;
    keepalive_timeout 65;
    proxy_read_timeout 200;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    gzip on;
    gzip_min_length 1000;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml
               application/x-javascript application/xml
               application/atom+xml text/javascript;

    # Only retry if there was a communication error, not a timeout
    # on the Tornado server (to avoid propagating "queries of death"
    # to all frontends)
    proxy_next_upstream error;
    server {
        listen 8080 default_server;
        # Allow file uploads
        client_max_body_size 500M;
        proxy_buffering off;
        proxy_buffer_size 4k;

        location /knowledge/ {
            try_files $uri @knowledge;
        }

        location @knowledge {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://knowledge;
        }

        location / {
            try_files $uri @webfront;
        }

        location @webfront {
            proxy_pass_header Server;
            proxy_set_header Host $http_post;
            proxy_redirect off;
            proxy_set_header X-Real_IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://webfront;

        }

    }

    server {
        listen 8081 ;
        # Allow file uploads
        client_max_body_size 500M;
        proxy_buffering off;
        proxy_buffer_size 4k;

        location / {
            try_files $uri @client;
        }

        location @client {
            proxy_pass_header Server;
            proxy_set_header Host $http_post;
            proxy_redirect off;
            proxy_set_header X-Real_IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://client;

        }
    }
}