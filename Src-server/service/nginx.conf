
worker_processes 1;

error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
}


http {
    # Enumerate all the Tornado servers here
    upstream knowledge {
        server 127.0.0.1:8081;
    }

    upstream webfront {
        server 127.0.0.1:8082;
    }

    default_type application/octet-stream;

    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log crit;

    client_body_timeout 100;
    keepalive_timeout 65;
    proxy_read_timeout 200;
    proxy_connect_timeout 100;
    proxy_send_timeout 100;
    send_timeout 100;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    gzip on;
    gzip_http_version 1.1;
    gzip_comp_level 5;
    gzip_min_length 265;
    gzip_proxied expired no-cache no-store private auth;
    gzip_vary on;
    gzip_buffers 16 8k;
    gzip_types application/atom+xml application/javascript
        application/json application/rss+xml
        application/vnd.ms-fontobject application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml application/xml
        font/opentype image/svg+xml
        image/x-icon text/css
        text/plain text/x-component;

    # Only retry if there was a communication error, not a timeout
    # on the Tornado server (to avoid propagating "queries of death"
    # to all frontends)
    proxy_next_upstream error timeout http_502;

    server {
        listen 8080 default_server;
        # Allow file uploads
        client_max_body_size 500M;
        proxy_buffering off;
        proxy_buffer_size 1k;
        add_header X-Frame-Options "DENY";

        location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
            expires 30d;
            # add_header Pragma public;
            # add_header Cache-Control "public";
        }

        location /knowledge/ {
            try_files $uri @knowledge;
        }

        location @knowledge {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://knowledge;
        }

        location / {
            try_files $uri @webfront;
        }

        location @webfront {
            proxy_pass_header Server;
            proxy_set_header Host $http_post;
            proxy_redirect off;
            proxy_set_header X-Real_IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://webfront;

        }

        location /nginx_status {
            # Enable Nginx stats
            stub_status on;
            # Only allow access from your IP e.g 1.1.1.1 or localhost #
            allow 127.0.0.1;
            # Other request should be denied
            deny all;
        }
    }

}