2016-04-11 11:37:33,232 - knowledge_logger - main.py-parse-request : expected key "ug_id" is missing in the dictionary, but received: {u'user_group_id': 4, u'form_ids': [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26], u'user_group_name': u'Testing', u'form_category_id': 2}
2016-04-11 11:37:33,279 - knowledge_logger - main.py : Traceback (most recent call last):
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/server/main.py", line 99, in _parse_request
    data
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/protocol/admin.py", line 607, in parse_structure
    request = parse_structure_VariantType_admin_Request(request)
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/protocol/parse_structure.py", line 2273, in parse_structure_VariantType_admin_Request
    return admin.Request.parse_structure(data)
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/protocol/admin.py", line 62, in parse_structure
    return _Request_class_map[name].parse_inner_structure(data)
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/protocol/admin.py", line 114, in parse_inner_structure
    data = parse_dictionary(data, ["ug_id", "ug_name", "fc_id", "f_ids"])
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/protocol/jsonvalidators.py", line 143, in parse_dictionary
    raise expectation_error(msg, x)
ValueError: expected key "ug_id" is missing in the dictionary, but received: {u'user_group_id': 4, u'form_ids': [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26], u'user_group_name': u'Testing', u'form_category_id': 2}

2016-04-11 11:45:50,067 - knowledge_logger - main.py-parse-request : expected key "email_id" is missing in the dictionary, but received: {u'ug_id': 4, u'desig': None, u'd_ids': [2, 4, 1], u'c_n': u'--', u'emp_c': u'EMPTEST001', u'add': None, u'c_ids': [4, 6], u'emp_n': u'Testing', u'email': u'test@domain.com'}
2016-04-11 11:45:50,069 - knowledge_logger - main.py : Traceback (most recent call last):
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/server/main.py", line 99, in _parse_request
    data
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/protocol/admin.py", line 607, in parse_structure
    request = parse_structure_VariantType_admin_Request(request)
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/protocol/parse_structure.py", line 2273, in parse_structure_VariantType_admin_Request
    return admin.Request.parse_structure(data)
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/protocol/admin.py", line 62, in parse_structure
    return _Request_class_map[name].parse_inner_structure(data)
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/protocol/admin.py", line 180, in parse_inner_structure
    data = parse_dictionary(data, ["email_id", "user_group_id", "employee_name", "employee_code", "contact_no", "address", "designation", "country_ids", "domain_ids"])
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/protocol/jsonvalidators.py", line 143, in parse_dictionary
    raise expectation_error(msg, x)
ValueError: expected key "email_id" is missing in the dictionary, but received: {u'ug_id': 4, u'desig': None, u'd_ids': [2, 4, 1], u'c_n': u'--', u'emp_c': u'EMPTEST001', u'add': None, u'c_ids': [4, 6], u'emp_n': u'Testing', u'email': u'test@domain.com'}

2016-04-11 12:40:34,992 - knowledge_logger - main.py-parse-request : expected key "group_name" is missing in the dictionary, but received: {u'c_ids': [5, 2, 3], u'f_space': 80, u'c_to': u'30-Apr-2016', u'd_ids': [4, 2, 1], u'sms': True, u'incharge': [2, 4], u'c_from': u'01-Apr-2016', u's_name': u'lenovo', u'licence': 10, u'g_name': u'Lenovo', u'logo': {u'file_content': u'', u'file_name': u'45_degree_elbow_100.png', u'file_size': 13350}, u'config': [{u'period_from': 1, u'period_to': 12, u'country_id': 5, u'domain_id': 4}, {u'period_from': 1, u'period_to': 12, u'country_id': 5, u'domain_id': 2}, {u'period_from': 1, u'period_to': 12, u'country_id': 5, u'domain_id': 1}, {u'period_from': 1, u'period_to': 12, u'country_id': 2, u'domain_id': 4}, {u'period_from': 1, u'period_to': 12, u'country_id': 2, u'domain_id': 2}, {u'period_from': 1, u'period_to': 12, u'country_id': 2, u'domain_id': 1}, {u'period_from': 1, u'period_to': 12, u'country_id': 3, u'domain_id': 4}, {u'period_from': 1, u'period_to': 12, u'country_id': 3, u'domain_id': 2}, {u'period_from': 1, u'period_to': 12, u'country_id': 3, u'domain_id': 1}], u'email': u'sharmila@mindssoft.com'}
2016-04-11 12:40:34,994 - knowledge_logger - main.py : Traceback (most recent call last):
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/server/main.py", line 99, in _parse_request
    data
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/protocol/technomasters.py", line 1302, in parse_structure
    request = parse_structure_VariantType_technomasters_Request(request)
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/protocol/parse_structure.py", line 342, in parse_structure_VariantType_technomasters_Request
    return technomasters.Request.parse_structure(data)
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/protocol/technomasters.py", line 110, in parse_structure
    return _Request_class_map[name].parse_inner_structure(data)
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/protocol/technomasters.py", line 170, in parse_inner_structure
    data = parse_dictionary(data, ["group_name", "country_ids", "domain_ids", "logo", "contract_from", "contract_to", "incharge_persons", "no_of_user_licence", "file_space", "is_sms_subscribed", "email_id", "date_configurations", "short_name"])
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/protocol/jsonvalidators.py", line 143, in parse_dictionary
    raise expectation_error(msg, x)
ValueError: expected key "group_name" is missing in the dictionary, but received: {u'c_ids': [5, 2, 3], u'f_space': 80, u'c_to': u'30-Apr-2016', u'd_ids': [4, 2, 1], u'sms': True, u'incharge': [2, 4], u'c_from': u'01-Apr-2016', u's_name': u'lenovo', u'licence': 10, u'g_name': u'Lenovo', u'logo': {u'file_content': u'', u'file_name': u'45_degree_elbow_100.png', u'file_size': 13350}, u'config': [{u'period_from': 1, u'period_to': 12, u'country_id': 5, u'domain_id': 4}, {u'period_from': 1, u'period_to': 12, u'country_id': 5, u'domain_id': 2}, {u'period_from': 1, u'period_to': 12, u'country_id': 5, u'domain_id': 1}, {u'period_from': 1, u'period_to': 12, u'country_id': 2, u'domain_id': 4}, {u'period_from': 1, u'period_to': 12, u'country_id': 2, u'domain_id': 2}, {u'period_from': 1, u'period_to': 12, u'country_id': 2, u'domain_id': 1}, {u'period_from': 1, u'period_to': 12, u'country_id': 3, u'domain_id': 4}, {u'period_from': 1, u'period_to': 12, u'country_id': 3, u'domain_id': 2}, {u'period_from': 1, u'period_to': 12, u'country_id': 3, u'domain_id': 1}], u'email': u'sharmila@mindssoft.com'}

2016-04-11 12:49:27,771 - knowledge_logger - main.py-parse-request : expected key "client_id" is missing in the dictionary, but received: {u'c_id': 3, u'f_space': 4, u'c_to': u'30-Sep-2016', u'd_ids': [1, 2], u'sms': True, u'incharge': [2], u'c_from': u'01-Mar-2016', u'licence': 10, u'c_ids': [1, 5], u'logo': None, u'config': [{u'period_from': 1, u'period_to': 12, u'country_id': 1, u'domain_id': 1}, {u'period_from': 1, u'period_to': 12, u'country_id': 1, u'domain_id': 2}, {u'period_from': 1, u'period_to': 12, u'country_id': 5, u'domain_id': 1}, {u'period_from': 1, u'period_to': 12, u'country_id': 5, u'domain_id': 2}], u'g_name': u'fdagg'}
2016-04-11 12:49:27,773 - knowledge_logger - main.py : Traceback (most recent call last):
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/server/main.py", line 99, in _parse_request
    data
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/protocol/technomasters.py", line 1310, in parse_structure
    def __init__(self, session_token, request):
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/protocol/parse_structure.py", line 342, in parse_structure_VariantType_technomasters_Request
    return technomasters.Request.parse_structure(data)
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/protocol/technomasters.py", line 110, in parse_structure
    return _Request_class_map[name].parse_inner_structure(data)
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/protocol/technomasters.py", line 241, in parse_inner_structure
    data = parse_dictionary(data, [
  File "/home/thickpadi5/Projects/aparajitha-saas/Src-server/protocol/jsonvalidators.py", line 143, in parse_dictionary
    raise expectation_error(msg, x)
ValueError: expected key "client_id" is missing in the dictionary, but received: {u'c_id': 3, u'f_space': 4, u'c_to': u'30-Sep-2016', u'd_ids': [1, 2], u'sms': True, u'incharge': [2], u'c_from': u'01-Mar-2016', u'licence': 10, u'c_ids': [1, 5], u'logo': None, u'config': [{u'period_from': 1, u'period_to': 12, u'country_id': 1, u'domain_id': 1}, {u'period_from': 1, u'period_to': 12, u'country_id': 1, u'domain_id': 2}, {u'period_from': 1, u'period_to': 12, u'country_id': 5, u'domain_id': 1}, {u'period_from': 1, u'period_to': 12, u'country_id': 5, u'domain_id': 2}], u'g_name': u'fdagg'}

